 name: Grunt CI

on:
  push:
    branches: [ release, master ]
  pull_request:
    branches: [ release, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [7.4, 8.0, 8.1, 8.2]
        node: [14, 16]
        wordpress: [latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, intl
          tools: composer:v2
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install WordPress
        run: |
          mkdir -p /tmp/wordpress
          git clone --depth=1 https://github.com/WordPress/WordPress.git /tmp/wordpress
          cd /tmp/wordpress
          cp wp-tests-config-sample.php wp-tests-config.php
          sed -i "s/youremptytestdbnamehere/wordpress_test/" wp-tests-config.php
          sed -i "s/yourusernamehere/root/" wp-tests-config.php
          sed -i "s/yourpasswordhere/root/" wp-tests-config.php

      - name: Setup MySQL
        run: |
          sudo systemctl start mysql.service
          mysql -e 'CREATE DATABASE IF NOT EXISTS wordpress_test;' -uroot -proot

      - name: Install Dependencies
        run: |
          npm ci
          npm rebuild node-sass

      - name: Install Grunt CLI
        run: npm install -g grunt-cli

      - name: Run Grunt Tasks
        run: |
          grunt --version
          grunt build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: |
            dist/
            build/
            *.css
            *.js
          retention-days: 5
